#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<setjmp.h>

jmp_buf jmp;//记录回复的位置变量

//定义链表结构
typedef struct _node{
	int number,date;//结点数据域
	char name[50],author[50],singer[50],style[50];
	struct _node*next;//指向后继结点
}Node;//链表结点
typedef struct _list{
	Node*head;//链表头
	Node*tail;//链表尾
}List;

void start(List*plist);
void joke(List*plist);
void menu(List*plist);
void update(List*plist);
void search(List*plist);
void read(List*plist,Node*p);
void browse(List*plist);
void input(List*plist);
void delete(List*plist);
void add(List*plist,int dat,char nam[],char aut[],char sin[],char sty[]);
void end(List*plist);
void print(Node*p);
void find1(List*plist);
void find2(List*plist);
void find3(List*plist);
void find4(List*plist);
void find5(List*plist);
void find6(List*plist);
void statistic(List*plist);
int count1(List*plist);
int count2(List*plist);
int count3(List*plist);
int count4(List*plist);

//主函数
int main()
{
	List list;
	list.head=list.tail=NULL;//链表初始化
	printf("\nWelcom To Dean's Music Notes\n");
	if(setjmp(jmp)==0)//保存当前堆栈环境    setjmp(jmp)直接调用值为0，判定为真；通过longjmp(jmp,1)跳转时返回值为1，判断为假
	start(&list);
	end(&list);
return 0;
}

//更新模块
void update(List*plist){
	int t,j,i=1;
	char u[50];
	Node*p,*q;
	//选择排序算法
	for(p=plist->head;p;p=p->next){
		for(q=p->next;q;q=q->next){
			if(q->date<p->date){
				t=q->date;q->date=p->date;p->date=t;
				strcpy(u,q->name);strcpy(q->name,p->name);strcpy(p->name,u);
				strcpy(u,q->author);strcpy(q->author,p->author);strcpy(p->author,u);
				strcpy(u,q->singer);strcpy(q->singer,p->singer);strcpy(p->singer,u);
				strcpy(u,q->style);strcpy(q->style,p->style);strcpy(p->style,u);
			}
		}
	}
	for(p=plist->head;p;p=p->next){
		p->number=i++;
	}
	menu(plist);
}

//阅读模块
void read(List*plist,Node*p){
	int c;
	if(p!=NULL){
	print(p);
	do{printf("\n1.Back\n2.Next\n3.Menu\nPlease choose a number:");
		fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1){
		if(p->number <= 1)menu(plist);
		else{int i=(p->number-1);
			for(p=plist->head;p;p=p->next){
				if(p->number==i)break;
			}
			read(plist,p);}
	}
	else if(c==2){if(p->next){p=p->next;read(plist,p);}
		else {printf("\nNULL\n");menu(plist);}}
	else if(c==3){
		menu(plist);
	}
	else{printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m\n");}
	}while(c!=1&&c!=2&&c!=3);//用户不规范输入时进行报错补救
	}
	else {printf("\nNULL\n");menu(plist);}
}

//浏览模块
void browse(List*plist){
	if(plist->head){
	Node*p;
	for(p=plist->head;p;p=p->next){
		printf("%d  %s",p->number,p->name);
		printf("\n");
	   }
	int c;
	printf("\n1.Back\n2.Again\nPlease make a choice:");
	scanf("%d",&c);
	      do{
		if(c==1)
		{
			menu(plist);
		}
		else if(c==2)
			browse(plist);
		else
		{
			printf("\n\033[41;33;1;5mSorry,I don't know your meaning.\033[0m\n");
			printf("Please choose your number again:");
			fflush(stdin);//清楚缓冲区
				scanf("%d",&c);

		}
	}while(c!=1&&c!=2);//用户不规范输入时报错补救
	}
	else {printf("\nNULL\n");menu(plist);}
}

//删除模块
void delete(List*plist){
	int c,d;
	Node*q,*p;
	printf("\nPlease enter the number(if you have no idea ,please enter '0' to give up):");
	        scanf("%d",&d);
		if(d!=0)
	       for(q=NULL,p=plist->head;p;q=p,p=p->next){
	        	if(p->number==d){
		        	if(q){
		  		q->next=p->next;
		        	}else{
			 	plist->head=p->next;
			        }
			        free(p);//释放指针
			        break;
		         }
				 else{
					 printf("\033[41;33;1;5mSorry I don't find it.\n");
				 }	
	       }
	       do{printf("\n1.continue\n2.back\nPlease make a choice:");
		       fflush(stdin);//清除缓冲区
	       scanf("%d",&c);
	       if(c==1) delete(plist);
	       else if(c==2) update(plist);
	       else printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");
	}while(c!=1&&c!=2);//不规范输入报错补救
}

//查询模块
void search(List*plist){
	int c;
	printf("\n1.Number\n2.Date\n3.Name\n4.Author\n5.Singer\n6.Style\n7.Back\nPlease choose a way to search(eg:1):");
	scanf("%d",&c);
	getchar();//消除缓冲区残留
	switch(c){
		case 1:find1(plist);break;
		case 2:find2(plist);break;
		case 3:find3(plist);break;
		case 4:find4(plist);break;
		case 5:find5(plist);break;
		case 6:find6(plist);break;
		case 7:menu(plist);break;
		default:printf("\033[41;33;1;5mSorry,I don't know.\033[0m\nPlease try again:");search(plist);//不规范输入报错补救
	   }
}
void find1(List*plist){
	printf("Please enter:");
	int f,j=0,c;
	Node*p;
	scanf("%d",&f);
	for(p=plist->head;p;p=p->next){
		if(p->number==f){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
		fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find1(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
     }
}
void find2(List*plist){
	printf("Please enter:");
	int f,j=0,c;
	Node*p;
	scanf("%d",&f);
	for(p=plist->head;p;p=p->next){
		if(p->date==f){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
		fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find2(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
     }
}
void find3(List*plist){
	printf("Please enter:");
	int j=0,c;
	char f[50];
	Node*p;
	gets(f);
	for(p=plist->head;p;p=p->next){
		if(!strcmp(p->name,f)){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
	fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find3(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
     }
}
void find4(List*plist){
	printf("Please enter:");
	int j=0,c;
	char f[50];
	Node*p;
	gets(f);
	for(p=plist->head;p;p=p->next){
		if(!strcmp(p->author,f)){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
	fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find4(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
     }
}
void find5(List*plist){
	printf("Please enter:");
	int j=0,c;
	char f[50];
	Node*p;
	gets(f);
	for(p=plist->head;p;p=p->next){
		if(!strcmp(p->singer,f)){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
	fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find5(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
    }
}
void find6(List*plist){
	printf("Please enter:");
	int j=0,c;
	char f[50];
	Node*p;
	gets(f);
	for(p=plist->head;p;p=p->next){
		if(!strcmp(p->style,f)){
			print(p);
			j=1;
		}
	}if(j==0){printf("\n\033[41;33;1;5mSorry,I can't find it.\033[0m");
	do{printf("\n1.Again\n2.Back\n3.Menu\nPlease give me your answer(eg:1):");
	fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1)find6(plist);
	else if(c==2)search(plist);
	else if(c==3)menu(plist);
	else {printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m");}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
    }
}

//输出模块
void print(Node*p){
	printf("\nNumber:%d\n",p->number);
	printf("Date:%d\n",p->date);
	printf("Name:%s\n",p->name);
	printf("Author:%s\n",p->author);
	printf("Singer:%s\n",p->singer);
	printf("Style:%s\n\n",p->style);
}


//输入模块
void input(List*plist){
	printf("Please tell me the song's\n");
	int dat;
	printf("Date(eg:20210202):");
	scanf("%d",&dat);
	getchar();//清除缓冲区残留
	char nam[50],aut[50],sin[50],sty[20];
	int c;
	printf("Name(eg:Love):");
	gets(nam);
	printf("Author(Jack):");
	gets(aut);
	printf("Singer(Mary):");
	gets(sin);
	printf("Style(Relax):");
	gets(sty);
	add(plist,dat,nam,aut,sin,sty);
	do{printf("\n1.cotinue\n2.back\nPlease choose your wish:");
		fflush(stdin);//清除缓冲区
	scanf("%d",&c);
	if(c==1) input(plist);
	else if(c==2) update(plist);
	else {
		printf("\n\033[41;33;1;5mSorry,I don't know.\033[0m\n");
	  }
	}while(c!=1&&c!=2);//不规范输入报错补救
}
void add(List*plist,int dat,char nam[],char aut[],char sin[],char sty[]){
	Node*p=(Node*)malloc(sizeof(Node));
	p->date=dat;
	strcpy(p->name,nam);
	strcpy(p->author,aut);
	strcpy(p->singer,sin);
	strcpy(p->style,sty);
	p->next=NULL;
	plist->tail=plist->head;
	if(plist->tail){
		while(plist->tail->next){
			plist->tail=plist->tail->next;
		}
		plist->tail->next=p;
	}else{
		plist->head=p;
	}
}

//统计模块
void statistic(List*plist){
	if(plist->head){
	int a1,a2,a3,a4,c;
	a1=count1(plist);
	a2=count2(plist);
	a3=count3(plist);
	a4=count4(plist);
	printf("Welcom!\n1.Songs:     %d\n2.Authors:   %d\n3.Singers:   %d\n4.Styles:    %d\n",a1,a2,a3,a4);
	 do{printf("\n1.Back\n2.Again\nPlease make a choice:");
		 fflush(stdin);//清除缓冲区
	        scanf("%d",&c);
		if(c==1)
		{
			menu(plist);
		}
		else if(c==2)
			statistic(plist);
		else
		{
			printf("\n\033[41;33;1;5mSorry,I don't know your meaning.\033[0m\n");
		}
	}while(c!=1&&c!=2);//不规范输入报错补救
	}
	else{
		printf("\nNULL\n");
		menu(plist);
	}
}
int count1(List*plist){
	int i=0;
	Node*p;
	for(p=plist->head;p;p=p->next){
		i++;
	}
	return i;
}
int count2(List*plist){
	int i=1;
	Node*p,*q;
	q=plist->head;
	   for(p=plist->head->next;p;p=p->next){
		if(strcmp(p->author,q->author)!=0)
				i++;
	   } 
	return i;
}
int count3(List*plist){
	int i=1;
	Node*p,*q;
	q=plist->head;
	for(p=plist->head->next;p;p=p->next){
	 if(strcmp(p->singer,q->singer)!=0)
				i++;
		}
	return i;
}
int count4(List*plist){
	int i=1;
	Node*p,*q;
	q=plist->head;
	for(p=plist->head->next;p;p=p->next){
	   if(strcmp(p->style,q->style)!=0)
				i++;
	}
	return i;
}

void joke(List*plist)
{
	printf("\n\033[47;34;1;4;5mAll living things equality\033[0m\n");
        start(plist);
}


//开始模块
void start(List*plist)
{
	printf("\nYou could choose a number of \"Menu\" , \"Leave\" and \"Root\"\n1.Menu\n2.Leave\n3.Root\nPlease choose your number:");
	int c;
	scanf("%d",&c);
	do{
		if(c==1)
		{
			menu(plist);
		}
		else if(c==2)
		{
			longjmp(jmp,2);//跳转会已经保存的断点
		}
		else if(c==3)
		{
			joke(plist);
		}
		else
		{
			printf("\n\033[41;33;1;5mSorry,I don't know your meaning.\033[0m\n");
			printf("Please choose your number again:");
			fflush(stdin);//清除缓冲区
				scanf("%d",&c);

		}
	}while(c!=1&&c!=2&&c!=3);//不规范输入报错补救
}

//结束模块
void end(List*plist)
{
	Node*p,*q;
	for(p=plist->head;p;p=q)
	{
		q=p->next;
		free(p);
	}
}

//菜单模块
void menu(List*plist)
{
	printf("\n\
		\033[32;1;5m***************************\n\
		**         MENU          **\n\
		**        1.Update       **\n\
		**        2.Search       **\n\
		**        3.Read         **\n\
		**        4.Browse       **\n\
		**        5.Input        **\n\
		**        6.Delete       **\n\
		**        7.statistic    **\n\
		**        8.Back         **\n\
		***************************\n\033[0m");
	printf("\nPlease tell me the number which you want:");
	int c;
	scanf("%d",&c);
	while(1)//不规范输入报错补救
	{
		switch(c)
	        {
		  case 1:update(plist);break;
		  case 2:search(plist);break;
		  case 3:read(plist,plist->head);break;
		  case 4:browse(plist);break;
		  case 5:input(plist);break;
		  case 6:delete(plist);break;
		  case 7:statistic(plist);break;
		  case 8:start(plist);break;
		  default:{
				printf("\n\033[41;33;5mSorry,I don't konwn what you mean,please try again:\033[0m");
				fflush(stdin);//清除缓冲区
			        scanf("%d",&c);
				break;
			}
	    }
	}
}
